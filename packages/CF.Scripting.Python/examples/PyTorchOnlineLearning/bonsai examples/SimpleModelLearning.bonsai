<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.5"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:p1="clr-namespace:CF.Scripting.Python;assembly=CF.Scripting.Python"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p2="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p3="clr-namespace:;assembly=Extensions"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:CreateRuntime">
          <p1:PythonHome>C:\Users\hgmar\.conda\envs\LBP-Torch</p1:PythonHome>
          <p1:ScriptPath>SimpleNetworkModel.py</p1:ScriptPath>
          <p1:PythonDLL>python39.dll</p1:PythonDLL>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="num:CreateRandom">
          <num:Seed xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p2:CreateContinuousUniform">
          <p2:Lower>-1</p2:Lower>
          <p2:Upper>1</p2:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>My Distribution</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>My Distribution</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT0.5S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>My Distribution</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:WithLatestFrom" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Item2</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p2:Sample" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:Set">
          <p1:VariableName>inputs</p1:VariableName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:EvalToDouble">
          <p1:Expression>model.forward(inputs)</p1:Expression>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Prediction</Name>
      </Expression>
      <Expression xsi:type="Multiply">
        <Operand xsi:type="DoubleProperty">
          <Value>0.5</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT0.03S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Real</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:Set">
          <p1:VariableName>target</p1:VariableName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:Eval">
          <p1:Expression>model.backward(target)</p1:Expression>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Real</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Prediction</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>2</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="3" Label="Source1" />
            <Edge From="2" To="3" Label="Source2" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="FloatProperty">
            <Value>0</Value>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="p3:TransformScript" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:CreateRuntime">
            <py:PythonHome>C:\Users\HugoMarques\anaconda3\envs\PyTorch</py:PythonHome>
            <py:ScriptPath>SimpleNetworkModel.py</py:ScriptPath>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:CreateModule">
            <py:Name>MyModule</py:Name>
            <py:ScriptPath>Code\LBP\lbp.oml\EmptyEnvironment.py</py:ScriptPath>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="p1:CreateRuntime">
            <p1:PythonHome>C:\Users\hgmar\AppData\Local\conda\conda\envs\LBP-PyTorch</p1:PythonHome>
            <p1:ScriptPath>SimpleNetworkModel.py</p1:ScriptPath>
            <p1:PythonDLL>python37..dll</p1:PythonDLL>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Timer">
            <rx:DueTime>PT0S</rx:DueTime>
            <rx:Period>PT0.5S</rx:Period>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="num:CreateRandom">
            <num:Seed xsi:nil="true" />
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="p2:CreateContinuousUniform">
            <p2:Lower>-1</p2:Lower>
            <p2:Upper>1</p2:Upper>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="p2:Sample" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>Convert.ToSingle(it)</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>it.toString()</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:Set">
            <py:VariableName>inputs</py:VariableName>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:Eval">
            <py:Expression>model.forward_net(inputs)</py:Expression>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>it.toString()</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Parse">
          <Pattern>%f</Pattern>
          <Separator>,</Separator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:BehaviorSubject">
          <Name>Prediction</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Multiply">
          <Operand xsi:type="DoubleProperty">
            <Value>0.5</Value>
          </Operand>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>Convert.ToSingle(it)</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Delay">
            <rx:DueTime>PT0.03S</rx:DueTime>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:BehaviorSubject">
          <Name>Real</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>it.toString()</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:Set">
            <py:VariableName>target</py:VariableName>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:Eval">
            <py:Expression>model.backward_net(target)</py:Expression>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Real</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Prediction</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="scr:ExpressionTransform">
          <scr:Expression>it[0]</scr:Expression>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="rx:Zip" />
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Workflow>
            <Nodes>
              <Expression xsi:type="WorkflowInput">
                <Name>Source1</Name>
              </Expression>
              <Expression xsi:type="MemberSelector">
                <Selector>Item1</Selector>
              </Expression>
              <Expression xsi:type="MemberSelector">
                <Selector>Item2</Selector>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Merge" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:Take">
                  <rx:Count>2</rx:Count>
                </Combinator>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="rx:ToArray" />
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="3" Label="Source1" />
              <Edge From="2" To="3" Label="Source2" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="FloatProperty">
            <Value>0</Value>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="p3:TransformScript" />
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="5" To="7" Label="Source1" />
      <Edge From="6" To="7" Label="Source2" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="9" To="13" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="18" To="20" Label="Source1" />
      <Edge From="19" To="20" Label="Source2" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
      <Edge From="31" To="38" Label="Source1" />
      <Edge From="32" To="33" Label="Source1" />
      <Edge From="33" To="34" Label="Source1" />
      <Edge From="34" To="35" Label="Source1" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="38" To="39" Label="Source1" />
      <Edge From="39" To="40" Label="Source1" />
      <Edge From="40" To="41" Label="Source1" />
      <Edge From="41" To="42" Label="Source1" />
      <Edge From="42" To="43" Label="Source1" />
      <Edge From="43" To="44" Label="Source1" />
      <Edge From="45" To="48" Label="Source1" />
      <Edge From="46" To="47" Label="Source1" />
      <Edge From="47" To="48" Label="Source2" />
      <Edge From="48" To="49" Label="Source1" />
      <Edge From="50" To="51" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>