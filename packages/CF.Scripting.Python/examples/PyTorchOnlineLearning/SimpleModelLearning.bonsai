<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.3"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:py="clr-namespace:Bonsai.Scripting.Python;assembly=Bonsai.Scripting.Python"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p1="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:p2="clr-namespace:;assembly=Extensions"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:CreateRuntime">
          <py:PythonHome>C:\Users\HugoMarques\anaconda3\envs\PyTorch</py:PythonHome>
          <py:ScriptPath>SimpleNetworkModel.py</py:ScriptPath>
        </Combinator>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="py:CreateModule">
            <py:Name>MyModule</py:Name>
            <py:ScriptPath>Code\LBP\lbp.oml\EmptyEnvironment.py</py:ScriptPath>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT0S</rx:DueTime>
          <rx:Period>PT0.5S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="num:CreateRandom">
          <num:Seed xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:CreateContinuousUniform">
          <p1:Lower>-1</p1:Lower>
          <p1:Upper>1</p1:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:Sample" />
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>Convert.ToSingle(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it.toString()</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:Set">
          <py:VariableName>inputs</py:VariableName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:Eval">
          <py:Expression>model.forward_net(inputs)</py:Expression>
        </Combinator>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it.toString()</scr:Expression>
      </Expression>
      <Expression xsi:type="Parse">
        <Pattern>%f</Pattern>
        <Separator>,</Separator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Prediction</Name>
      </Expression>
      <Expression xsi:type="Multiply">
        <Operand xsi:type="DoubleProperty">
          <Value>0.5</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>Convert.ToSingle(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Delay">
          <rx:DueTime>PT0.03S</rx:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>Real</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it.toString()</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:Set">
          <py:VariableName>target</py:VariableName>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="py:Eval">
          <py:Expression>model.backward_net(target)</py:Expression>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Real</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Prediction</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>it[0]</scr:Expression>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>2</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:ToArray" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="3" Label="Source1" />
            <Edge From="2" To="3" Label="Source2" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="FloatProperty">
          <Value>0</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p2:TransformScript" />
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="6" To="13" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="17" To="18" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
      <Edge From="20" To="23" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="22" To="23" Label="Source2" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="25" To="26" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>